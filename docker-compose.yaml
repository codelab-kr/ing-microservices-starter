services:
  gateway:
    build:
      context: .
      dockerfile: ./apps/gateway/Dockerfile
      target: development
    ports:
      - '3000:80'
    env_file:
      - ./apps/gateway/.env
    depends_on:
      # - mongodb-primary
      # - mongodb-secondary
      # - mongodb-arbiter
      - rabbitmq
      - redis
    volumes:
      - ./public:/usr/src/app/public:z
      - ./apps/gateway:/usr/src/app/apps/gateway:z
      - ./libs/common:/usr/src/app/libs/common:z

  api:
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile
      target: development
    ports:
      - '3010:80'
    env_file:
      - ./apps/api/.env
    depends_on:
      # - mongodb-primary
      # - mongodb-secondary
      # - mongodb-arbiter
      - rabbitmq
      - redis
    volumes:
      - ./apps/api:/usr/src/app/apps/api:z
      - ./libs/common:/usr/src/app/libs/common:z

  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    ports:
      - '3001:80'
    env_file:
      - ./apps/auth/.env
    depends_on:
      # - mongodb-primary
      # - mongodb-secondary
      # - mongodb-arbiter
      - rabbitmq
      - redis
    volumes:
      - ./apps/auth:/usr/src/app/apps/auth:z
      - ./libs/common:/usr/src/app/libs/common:z

  posts:
    build:
      context: .
      dockerfile: ./apps/posts/Dockerfile
      target: development
    ports:
      - '3009:80'
    env_file:
      - ./apps/posts/.env
    depends_on:
      # - mysql
      # - mongodb-primary
      # - mongodb-secondary
      # - mongodb-arbiter
      - rabbitmq
      - redis
    volumes:
      - ./apps/posts:/usr/src/app/apps/posts:z
      - ./libs/common:/usr/src/app/libs/common:z
      # - ./migrations:/usr/src/app/migrations:z

  videos:
    build:
      context: .
      dockerfile: ./apps/videos/Dockerfile
      target: development
    ports:
      - '3002:80'
    env_file:
      - ./apps/videos/.env
    depends_on:
      # - mongodb-primary
      # - mongodb-secondary
      # - mongodb-arbiter
      - rabbitmq
      - redis
      - history
      - auth
    volumes:
      - ./apps/videos:/usr/src/app/apps/videos:z
      - ./libs/common:/usr/src/app/libs/common:z

  storage:
    build:
      context: .
      dockerfile: ./apps/storage/Dockerfile
      target: development
    env_file:
      - ./apps/storage/.env
    depends_on:
      # - mongodb-primary
      # - mongodb-secondary
      # - mongodb-arbiter
      - rabbitmq
      - redis
      - auth
    volumes:
      - ./public/video:/usr/src/app/public/video:z
      - ./apps/storage:/usr/src/app/apps/storage:z
      - ./libs/common:/usr/src/app/libs/common:z

  history:
    build:
      context: .
      dockerfile: ./apps/history/Dockerfile
      target: development
    env_file:
      - ./apps/history/.env
    depends_on:
      # - mongodb-primary
      # - mongodb-secondary
      # - mongodb-arbiter
      - rabbitmq
      - redis
      - auth
    volumes:
      - ./apps/history:/usr/src/app/apps/history:z
      - ./libs/common:/usr/src/app/libs/common:z

  rabbitmq:
    image: rabbitmq
    ports:
      - '5672:5672'

  #   mongodb-primary:
  #     image: mongo:6.0.3
  #     environment:
  #       - MONGO_ADVERTISED_HOSTNAME=mongodb-primary
  #       - MONGO_INITDB_ROOT_USERNAME=root
  #       - MONGO_INITDB_ROOT_PASSWORD=password123
  #       - MONGO_REPLICA_SET_MODE=primary
  #     volumes:
  #       - 'mongodb_master_data:/docker.io/mongo'
  #       - ./mongodb.key:/etc/mongodb.key
  #     command:
  #       [
  #         '--replSet',
  #         'mongoReplicaSet',
  #         '--keyFile',
  #         '/etc/mongodb.key',
  #         '--bind_ip_all',
  #       ]
  #     ports:
  #       - '27017:27017'

  #   mongodb-secondary:
  #     image: mongo:6.0.3
  #     depends_on:
  #       - mongodb-primary
  #     environment:
  #       - MONGO_ADVERTISED_HOSTNAME=mongodb-secondary
  #       - MONGO_INITIAL_PRIMARY_HOST=mongodb-primary
  #       - MONGO_INITIAL_PRIMARY_ROOT_USERNAME=root
  #       - MONGO_INITIAL_PRIMARY_ROOT_PASSWORD=password123
  #       - MONGO_REPLICA_SET_MODE=secondary
  #     ports:
  #       - 27018:27017
  #     volumes:
  #       - ./mongodb.key:/etc/mongodb.key
  #     command:
  #       [
  #         '--replSet',
  #         'mongoReplicaSet',
  #         '--keyFile',
  #         '/etc/mongodb.key',
  #         '--bind_ip_all',
  #       ]

  #   mongodb-arbiter:
  #     image: mongo:6.0.3
  #     depends_on:
  #       - mongodb-primary
  #     environment:
  #       - MONGO_ADVERTISED_HOSTNAME=mongodb-arbiter
  #       - MONGO_INITIAL_PRIMARY_HOST=mongodb-primary
  #       - MONGO_INITIAL_PRIMARY_ROOT_USERNAME=root
  #       - MONGO_INITIAL_PRIMARY_ROOT_PASSWORD=password123
  #       - MONGO_REPLICA_SET_MODE=arbiter
  #     ports:
  #       - 27019:27017
  #     volumes:
  #       - ./mongodb.key:/etc/mongodb.key
  #     command:
  #       [
  #         '--replSet',
  #         'mongoReplicaSet',
  #         '--keyFile',
  #         '/etc/mongodb.key',
  #         '--bind_ip_all',
  #       ]

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - 6379:6379
    volumes:
      - redis:/data

volumes:
  # mongodb_master_data:
  #   driver: local
  redis:
    driver: local
  # node_modules:
  #   driver: local
