services:
  videos:
    build:
      context: .
      dockerfile: ./apps/videos/Dockerfile
      target: development
    command: yarn start:dev videos
    env_file:
      - ./apps/videos/.env
    depends_on:
      # - mongodb-primary
      # - mongodb-secondary
      # - mongodb-arbiter
      - metadata
      - history
      - auth
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3000:3000'

  metadata:
    build:
      context: .
      dockerfile: ./apps/metadata/Dockerfile
      target: development
    command: yarn start:dev metadata
    env_file:
      - ./apps/metadata/.env
    depends_on:
      # - mongodb-primary
      # - mongodb-secondary
      # - mongodb-arbiter
      - auth
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  history:
    build:
      context: .
      dockerfile: ./apps/history/Dockerfile
      target: development
    command: yarn start:dev history
    env_file:
      - ./apps/history/.env
    depends_on:
      # - mongodb-primary
      # - mongodb-secondary
      # - mongodb-arbiter
      - auth
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: npm run start:dev auth
    ports:
      - '3001:3001'
    env_file:
      - ./apps/auth/.env
    depends_on:
      # - mongodb-primary
      # - mongodb-secondary
      # - mongodb-arbiter
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  rabbitmq:
    image: rabbitmq
    ports:
      - '5672:5672'
#   mongodb-primary:
#     image: mongo:6.0.3
#     environment:
#       - MONGO_ADVERTISED_HOSTNAME=mongodb-primary
#       - MONGO_INITDB_ROOT_USERNAME=root
#       - MONGO_INITDB_ROOT_PASSWORD=password123
#       - MONGO_REPLICA_SET_MODE=primary
#     volumes:
#       - 'mongodb_master_data:/docker.io/mongo'
#       - ./mongodb.key:/etc/mongodb.key
#     command:
#       [
#         '--replSet',
#         'mongoReplicaSet',
#         '--keyFile',
#         '/etc/mongodb.key',
#         '--bind_ip_all',
#       ]
#     ports:
#       - '27017:27017'

#   mongodb-secondary:
#     image: mongo:6.0.3
#     depends_on:
#       - mongodb-primary
#     environment:
#       - MONGO_ADVERTISED_HOSTNAME=mongodb-secondary
#       - MONGO_INITIAL_PRIMARY_HOST=mongodb-primary
#       - MONGO_INITIAL_PRIMARY_ROOT_USERNAME=root
#       - MONGO_INITIAL_PRIMARY_ROOT_PASSWORD=password123
#       - MONGO_REPLICA_SET_MODE=secondary
#     ports:
#       - 27018:27017
#     volumes:
#       - ./mongodb.key:/etc/mongodb.key
#     command:
#       [
#         '--replSet',
#         'mongoReplicaSet',
#         '--keyFile',
#         '/etc/mongodb.key',
#         '--bind_ip_all',
#       ]

#   mongodb-arbiter:
#     image: mongo:6.0.3
#     depends_on:
#       - mongodb-primary
#     environment:
#       - MONGO_ADVERTISED_HOSTNAME=mongodb-arbiter
#       - MONGO_INITIAL_PRIMARY_HOST=mongodb-primary
#       - MONGO_INITIAL_PRIMARY_ROOT_USERNAME=root
#       - MONGO_INITIAL_PRIMARY_ROOT_PASSWORD=password123
#       - MONGO_REPLICA_SET_MODE=arbiter
#     ports:
#       - 27019:27017
#     volumes:
#       - ./mongodb.key:/etc/mongodb.key
#     command:
#       [
#         '--replSet',
#         'mongoReplicaSet',
#         '--keyFile',
#         '/etc/mongodb.key',
#         '--bind_ip_all',
#       ]
# volumes:
#   mongodb_master_data:
#     driver: local
